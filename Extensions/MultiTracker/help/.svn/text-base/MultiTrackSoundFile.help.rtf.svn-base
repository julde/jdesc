{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf420
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;\red0\green115\blue0;
\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 MultiTrackSoundFile\cf0 \
\
a \cf2 SoundFile\cf0 , whith a starting point, a duration and a name associated with it.\
\
\
see also \
\
\
	z = \cf2 MultiTrackSoundFile\cf0 .openReadAndClose( \cf3 "sounds/a11wlk01-44_1.aiff"\cf0 );\
z.numFrames;\
z.name;\
z.numChannels;\
z.duration;\
z.numFramesInUse_(7520);\
z.duration;\
z.duration_(0.5);\
z.name;\
z.path;\
\
x = z.copyWithNewSettings(0.5, 1.0);\
x.duration_(0.5);\
x.name;\
x.path;\
\
\
\pard\pardeftab560\ql\qnatural
\cf0 (\
\cf2 SynthDef\cf0 (\cf3 "help_Diskin"\cf0 , \{ \cf2 arg\cf0  bufnum = 0;\
	\cf2 Out\cf0 .ar(0, \cf2 DiskIn\cf0 .ar(1, bufnum));\
\}).send(s)\
)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 z.startTime_(1.5);\
b = z.getCueBuffer(s, doneAction:\{\cf4 \\done\cf0 .postln\});\
~synth = \cf2 Synth\cf0 (\cf4 \\help_Diskin\cf0 , [\cf4 \\bufnum\cf0 , b]);\
~synth.free;\
b.close;b.free;\
\
\
\
\
z.startTime_(1.5);\
(\
	\cf2 var\cf0  condition = \cf2 Condition\cf0 .new;\
r\{\
	b = z.getCueBuffer(s, condition); \
	condition.wait;\
	~synth = \cf2 Synth\cf0 (\cf4 \\help_Diskin\cf0 , [\cf4 \\bufnum\cf0 , b]);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf5 //	condition.test_(true).signal;\cf0 \
	r\{\
		z.duration.wait.postln;\
		~synth.free;\
		b.close;b.free;\
	\}.play;\
\}.run\
\
\
)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 MultiTracker\cf0 \
z.play;\
z.duration\
\
z.play;\
z.play;\
\
\
z = \cf2 MultiTrackSoundFile\cf0 .openReadAndClose( \cf3 "sounds/a11wlk01-44_1.aiff"\cf0 );\
\
y = z.multiTrackPlayer;\
y.prepare\
y.status\
\
y.file\
x = z.multiTrackPlayer;\
x.prepare\
x.status\
x.play;\
y.play;\
\
\
s.bufferAllocator.alloc(1)\
s.bufferAllocator\
\
Server}