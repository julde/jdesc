{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red255\green0\blue0;\red250\green235\blue215;\red34\green150\blue34;
\red200\green147\blue71;\red255\green255\blue0;\red30\green50\blue220;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf2 // Server\cf3 \
\cf4 Server\cf3 .default= s = \cf4 Server\cf3 .internal.boot;\
s.recSampleFormat_(\cf5 "int24"\cf3 );\
\
\
\cf2 // Cocoa\cf3 \
\
\cf4 CocoaDocument\cf3 .defaultFont_(\cf4 Font\cf3 (\cf5 "Monaco"\cf3 , \cf6 12\cf3 ));\
\
\cf4 Document\cf3 .themes.put(\
				\cf7 \\Sergio\cf3 , \
				(classColor: \cf4 Color\cf3 .new255(\cf6 204\cf3 , \cf6 204\cf3 , \cf6 51\cf3 ),\
				 textColor: \cf4 Color\cf3 .new255(\cf6 205\cf3 , \cf6 205\cf3 , \cf6 205\cf3 ),\
				 stringColor: \cf4 Color\cf3 .new255(\cf6 145\cf3 , \cf6 147\cf3 , \cf6 71\cf3 ),\
				 commentColor: \cf4 Color\cf3 (\cf6 0.4\cf3 , \cf6 0.4\cf3 , \cf6 0.4\cf3 ),\
				 symbolColor: \cf4 Color\cf3 .new255(\cf6 165\cf3 ,\cf6 194\cf3 ,\cf6 97\cf3 ),\
				 numberColor: \cf4 Color\cf3 .new255(\cf6 108\cf3 ,\cf6 153\cf3 ,\cf6 187\cf3 ),\
				 background: \cf4 Color\cf3 .new255(\cf6 50\cf3 , \cf6 50\cf3 , \cf6 50\cf3 ),\
				 selectedBackground: \cf4 Color\cf3 .new255(\cf6 70\cf3 , \cf6 70\cf3 , \cf6 70\cf3 )\
				)\
);\
\
\cf4 Document\cf3 .themes.put(\
				\cf7 \\Julio\cf3 , \
				(classColor: \cf4 Color\cf3 .new255(\cf6 34\cf3 , \cf6 150\cf3 , \cf6 34\cf3 ),\
				 textColor: \cf4 Color\cf3 .new255(
\fs22 \cf6 250\cf3 , \cf6 235\cf3 , \cf6 215
\fs24 \cf3 ),\
				 stringColor: \cf4 Color\cf3 .new255(\cf6 200\cf3 , \cf6 147\cf3 , \cf6 71\cf3 ),\
				 commentColor: \cf4 Color\cf3 (\cf6 1\cf3 , \cf6 0\cf3 , \cf6 0\cf3 ),\
				 symbolColor: \cf4 Color\cf3 .new255(\cf6 30\cf3 , \cf6 50\cf3 , \cf6 220\cf3 ),\
				 numberColor: \cf4 Color\cf3 .new255(\cf6 255\cf3 ,\cf6 255\cf3 ,\cf6 0\cf3 ),\
				 background: \cf4 Color\cf3 .new255(\cf6 0\cf3 , \cf6 0\cf3 , \cf6 0\cf3 , \cf6 250\cf3 , \cf6 248\cf3 ),\
				 selectedBackground: \cf4 Color\cf3 .new255(\cf6 70\cf3 , \cf6 70\cf3 , \cf6 70\cf3 )\
				)\
);\
\
\
\
\
\cf4 Document\cf3 .themes.default.background = \cf4 Color\cf3 .white;\
\
\cf4 Document\cf3 .setTheme(\cf4 Archive\cf3 .global[\cf7 \\Theme\cf3 ] ? \cf7 \\Sergio\cf3 );\
\
\cf4 Document\cf3 .postColor = \cf4 Document\cf3 .theme.textColor;\
\
\cf4 Document\cf3 .listener\
	.bounds_(\cf4 Rect\cf3 (\cf6 1035\cf3 , \cf6 483\cf3 , \cf6 405\cf3 , \cf6 395\cf3 ))\
	\cf2 /*(Rect(Window.screenBounds.width - 405, 437, 405, 395))*/\cf3 \
	.font_(\cf4 Font\cf3 (\cf5 "Monaco"\cf3 , \cf6 12\cf3 ))\
	.background_(\cf4 Document\cf3 .theme.background)\
	.selectedBackground_(\cf4 Color\cf3 .new255(\cf6 70\cf3 , \cf6 70\cf3 , \cf6 70\cf3 ))\
	.stringColor_(\cf4 Document\cf3 .theme.textColor);\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1 \cf3 [  \cf7 \\docPositions\cf3 ].do \{\cf4 | key |\cf3 \
	
\f0 \cf3 if (\cf4 Archive\cf3 .global[key].isNil) \
		\{ \cf4 Archive\cf3 .global[key] = \cf4 IdentityDictionary\cf3 [] \}\
\};\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs20 \cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs24 \cf3 \
\cf4 Document\cf3 .initAction = 
\f1 \cf4 Document\cf3 .initAction.addFunc
\f0 \cf3 \
	\{\cf4 | doc |\cf3 \
	 \cf4 var\cf3  arch, pos, cursor;\
	 \
	 if (doc.path.isNil)\
	 	\{ doc.autoComplete;\
	 	  doc.background = \cf4 Document\cf3 .theme.background;\
		  doc.selectedBackground = \cf4 Document\cf3 .theme.selectedBackground;\
		  doc.stringColor = \cf4 Document\cf3 .theme.textColor \
		\}\
		\{ if (doc.path.endsWith(\cf5 ".html"\cf3 ).not)\
			\{ doc.autoComplete;\
			  doc.background = \cf4 Document\cf3 .theme.background;\
			  doc.selectedBackground = \cf4 Document\cf3 .theme.selectedBackground;\
			  doc.syntaxColorize\
			\}\
		\};\
	\
	 \
	 #pos, cursor	= \cf4 Archive\cf3 .global[\cf7 \\docPositions\cf3 ][doc.path.asSymbol].asArray;\
	 if (pos.notNil) \{ \{doc.bounds = pos\}.defer(\cf6 0.1\cf3 ) \};\
	 if (cursor.notNil and: \{ doc.path.endsWith(\cf5 ".sc"\cf3 ).not \}) \{ \{ doc.selectRange(cursor) \}.defer(\cf6 0.1\cf3 ) \};\
	 doc.onClose_\{\cf4 | doc |\cf3  \
	 	if (doc.path.notNil and: \{ doc.path.endsWith(\cf5 ".sc"\cf3 ).not \}) \
	 	  	\{ \cf4 Archive\cf3 .global[\cf7 \\docPositions\cf3 ][doc.path.asSymbol] = [ doc.bounds, doc.selectionStart ] \}\
	 \}\
	\};\
\
\
\cf2 // Menu Items\cf3 \
\cf4 Document\cf3 .themes.keys.do\{\cf4 | theme |\cf3  \
	\cf4 CocoaMenuItem\cf3 .add([ \cf5 "Theme"\cf3 , theme.asString ], \
		\{ \cf4 Document\cf3 .setTheme(theme);\
		  \cf4 Document\cf3 .openDocuments.select\{\cf4 | doc |\cf3  doc.path.isNil or: \{ doc.path.endsWith(\cf5 "html"\cf3 ).not  \}\}\
		  	.do\{\cf4 | doc |\cf3  \
		  	    doc.background = \cf4 Document\cf3 .theme.background;\
			  doc.selectedBackground = \cf4 Document\cf3 .theme.selectedBackground;\
			  doc.stringColor = \cf4 Document\cf3 .theme.textColor;\
			  doc.syntaxColorize;\
			\};\
		  \cf4 Archive\cf3 .global[\cf7 \\Theme\cf3 ] = theme;\
		  \cf4 Document\cf3 .postColor = \cf4 Document\cf3 .theme.textColor;\
		  \
		\}\
	);	\
\};\
\cf4 CocoaMenuItem\cf3 .add(\
	[ \cf5 "Startup"\cf3  ], \
	\{ \cf4 Document\cf3 .open( \cf4 Platform\cf3 .userAppSupportDir +/+ \cf5 "startup.rtf"\cf3  ) \}\
).setShortCut(\cf5 "s"\cf3 , \cf4 true\cf3 , \cf4 false\cf3 );\
\cf2 //CocoaMenuItem.add([ "EQ" ], \{ 
\fs18 MasterEQ.start 
\fs24 \});\cf3 \
\
\
\
\cf2 // Pbind\cf3 \
\
\cf4 SynthDescLib\cf3 .global.read;\
\
\cf2 //midi\cf3 \
\
\cf4 MIDIClient\cf3 .init;\
m = \cf4 MIDIOut\cf3 (\cf6 0\cf3 , \cf4 MIDIClient\cf3 .destinations.at(\cf6 0\cf3 ).uid);\
}